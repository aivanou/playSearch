<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <jdbc:initialize-database data-source="accessKeyDataSource">
        <jdbc:script location="hsqldb_access_keys_schema.sql"/>
    </jdbc:initialize-database>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property searchType="dataSource" ref="accessKeyDataSource"/>
    </bean>

    <bean id="accessKeyDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property searchType="driverClassName" value="org.hsqldb.jdbc.JDBCDriver"/>
        <property searchType="url" value="jdbc:hsqldb:mem:testdb;sql.syntax_mys=true"/>
        <property searchType="username" value="sa"/>
        <property searchType="password" value=""/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property searchType="dataSource" ref="accessKeyDataSource"/>
    </bean>

    <!-- String Key -->
    <bean id="stringMySqlKeyDao" class="com.akavita.metasearch.keystorage.dao.mysql.MysqlStringKeyDao">
        <constructor-arg searchType="stringKeyTable" value="string_access_key"/>
        <constructor-arg searchType="rowMapper">
            <bean class="com.akavita.metasearch.keystorage.dao.mysql.StringKeyRowMapper"/>
        </constructor-arg>
        <constructor-arg searchType="dataSource" ref="accessKeyDataSource"/>
    </bean>

    <bean id="bingKeyProvider" class="com.akavita.metasearch.keystorage.service.StringKeyProvider">
        <constructor-arg value="bing"/>
        <constructor-arg ref="stringMySqlKeyDao"/>
    </bean>

    <!-- Google Key -->
    <bean id="googleMySqlKeyDao" class="com.akavita.metasearch.keystorage.dao.mysql.MysqlGoogleKeyDao">
        <constructor-arg searchType="googleKeyTable" value="google_access_key"/>
        <constructor-arg searchType="rowMapper">
            <bean class="com.akavita.metasearch.keystorage.dao.mysql.GoogleKeyRowMapper"/>
        </constructor-arg>
        <constructor-arg searchType="dataSource" ref="accessKeyDataSource"/>
    </bean>

    <bean id="googleKeyProvider" class="com.akavita.metasearch.keystorage.service.GoogleKeyProvider">
        <constructor-arg ref="googleMySqlKeyDao"/>
    </bean>

    <bean id="googleMysqlKeyProvider" class="com.akavita.metasearch.keystorage.service.GoogleKeyProvider">
        <constructor-arg searchType="keyDao" ref="googleMySqlKeyDao"/>
    </bean>

    <bean id="bingMysqlKeyProvider" class="com.akavita.metasearch.keystorage.service.StringKeyProvider">
        <constructor-arg searchType="providerName" value="bing"></constructor-arg>
        <constructor-arg searchType="keyDao" ref="stringMySqlKeyDao"/>
    </bean>
</beans>
